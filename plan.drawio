<mxfile host="65bd71144e">
    <diagram id="t0s1odw_he6nSF_8H_vn" name="Page-1">
        <mxGraphModel dx="1046" dy="434" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="DREAMER&lt;br&gt;&lt;ul&gt;&lt;li&gt;Have a function which returns where the submarine is in the water, how that depth affects the crew etc&lt;/li&gt;&lt;li&gt;Tests which cover every possible depth, include above the water, a crush depth&lt;/li&gt;&lt;li&gt;Have the input in feet and the output in metres&lt;/li&gt;&lt;li&gt;Create multiple different ways of arriving at the answer to satisfy every test&lt;/li&gt;&lt;/ul&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="40" y="170" width="220" height="280" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="REALIST&lt;br&gt;&lt;ul&gt;&lt;li&gt;Try writing tests then use TDD to solve them&lt;/li&gt;&lt;li&gt;Test against a very few basic criteria of where the submarine is&lt;/li&gt;&lt;li&gt;Use time efficiently and complete by Thursday evening to allow testing with team mates Friday morning&lt;/li&gt;&lt;/ul&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="290" y="170" width="230" height="280" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="CRITIC&lt;br&gt;&lt;ul&gt;&lt;li&gt;Use a basic is it underwater or not methodology to get an initial MVP&lt;/li&gt;&lt;li&gt;Write teh tests to cover the values using equivalence partitioning - is it right or wrong&lt;/li&gt;&lt;/ul&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="550" y="170" width="220" height="280" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="Theme:&lt;br&gt;Submarine based. Simple logic for working out where the boat is based on depth data.&lt;br&gt;If the depth sensor is located on the keel (the bottom) and the height of the submarine is 20m, return the location of the boat as a string (e.g. at 20m, &quot;on the surface&quot;, at 100m, &quot;underwater&quot;)&amp;nbsp;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="40" y="60" width="730" height="80" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>